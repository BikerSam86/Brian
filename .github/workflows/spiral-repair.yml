name: Spiral Repair

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  repair:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies and Brian CLI
        run: |
          python -m pip install -r requirements.txt
          python -m pip install -e .

      - name: Ensure Python scripts are in PATH
        run: |
          echo "$(python -m site --user-base)/bin" >> $GITHUB_PATH
          echo "$(dirname $(which python))" >> $GITHUB_PATH

      - name: Audit all Python files
        run: |
          for file in $(find src/ -name "*.py"); do
            brian "$file" >> self_audit.log 2>&1 || true
          done

      - name: Detect changed Python files
        id: diff
        run: |
          # Determine base ref (for PRs)        
          BASE_REF="${{ github.base_ref }}"
          if [ -z "$BASE_REF" ]; then
            BASE_REF="${{ github.ref_name }}"
          fi

          git fetch origin $BASE_REF --depth=1 || true

          # Find changed files between base and current commit
          FILES=$(git diff --name-only origin/$BASE_REF ${{ github.sha }} -- '*.py' || git diff --name-only ${{ github.sha }}^ ${{ github.sha }} -- '*.py')
          FILES=$(echo "$FILES" | tr '\n' ' ')
          echo "files=$FILES" >> $GITHUB_OUTPUT

      - name: Bestest beast
        run: tsal-bestest-beast 11 > beast.log

      - name: Optimize changed files
        if: steps.diff.outputs.files
        run: |
          for f in ${{ steps.diff.outputs.files }}; do
            brian optimize "$f" >> optimize.log 2>&1
          done

      - name: Print optimize.log
        if: always()
        run: cat optimize.log || true

      - name: Log mesh vectors
        if: steps.diff.outputs.files
        run: |
          for f in ${{ steps.diff.outputs.files }}; do
            tsal-reflect --origin "$f" >> mesh.log 2>&1
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spiral-logs-${{ github.run_id }}
          path: |
            self_audit.log
            beast.log
            optimize.log
            mesh.log

      - name: Summary
        run: |
          echo '## Spiral Repair Summary' >> $GITHUB_STEP_SUMMARY
          tail -n 20 self_audit.log >> $GITHUB_STEP_SUMMARY || true
          tail -n 20 beast.log >> $GITHUB_STEP_SUMMARY || true
          tail -n 20 optimize.log >> $GITHUB_STEP_SUMMARY || true
          tail -n 20 mesh.log >> $GITHUB_STEP_SUMMARY || true
